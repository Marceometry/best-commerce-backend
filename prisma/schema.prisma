generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @unique @default(uuid())
  username String @unique
  password String
  name     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  purchases Purchase[]
  store     Store?     @relation(fields: [storeId], references: [id])
  storeId   String?

  @@map("users")
}

model Store {
  id   String @unique @default(uuid())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users     User[]
  products  Product[]
  category  Category[]
  address   Address?
  addressId String?

  @@map("stores")
}

model Address {
  id           String @unique @default(uuid())
  number       String
  street       String
  neighborhood String
  complement   String
  city         String
  state        String
  country      String
  zipCode      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String @unique

  @@map("addresses")
}

model Product {
  id          String  @unique @default(uuid())
  name        String
  description String
  price       Int // cents
  imageUrl    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  purchases  Purchase[]
  store      Store      @relation(fields: [storeId], references: [id])
  storeId    String
  category   Category?  @relation(fields: [categoryId], references: [id])
  categoryId String?

  @@map("products")
}

model Category {
  id   String @unique @default(uuid())
  name String
  slug String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
  store    Store     @relation(fields: [storeId], references: [id])
  storeId  String

  @@map("cateogires")
}

model Purchase {
  id String @unique @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product   Product @relation(fields: [productId], references: [id])
  productId String
  user      User    @relation(fields: [userId], references: [id])
  userId    String

  @@map("purchases")
}
